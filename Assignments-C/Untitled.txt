//Jamie Andrews, 22 September 2014, Lab Project #1

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#define MAXGUESSES 5
//function prototypes with a comment for each one describing what the function does.
//Copy and paste from assignment
//this function provides instructions to the user on how to play the game
void GameRules(void);
//this function runs one game. It for checks either 5 incorrect guesses or correct guess.
/*It returns a 0 if the game is over and the player did not guess the letter, otherwise it 
returns 1.*/
int PlayOneRound(char solution);
//this function prompts the player to make a guess and returns that guess
//this function is called from inside the PlayOneRound( ) function described above
char GetTheLetter(void);
//this function takes two arguments, the guess from the player 
//and the solution letter from the file. 
//It lets the user know if the guess comes alphabetically before or after the answer 
//The function returns 1 if the guess matches the solution and returns a 0 if they do not match
int CompareTheLetters(char guess, char solution);

int main()
{
	//declare additional variables
	FILE *intpr;
	int gamesToPlay = 0,
		i = 0;
	char solution;

	//display instructions
	//this function provides instructions to the user on how to play the game
	void GameRules(void);
	{
		printf("Welcome to the guessing game! \n");
		printf("You will enter the number of games you want to play (1-4). \n");
		printf("You will have 5 chances to guess the number. \n");
		printf("Let's begin: \n");
	}

	//open file
	intpr = fopen("input.txt", "r");
	fopen("input.txt", "r");
	fscanf(intpr, "%c", &solution);

	//get number of games to play
	printf("How many ? \n");
	scanf("%d", &gamesToPlay);


	for (i = 0; i<gamesToPlay; i++)
		
	   {
		//get a letter from file
		fscanf(intpr, "%c", &solution);

		//Play one game (Call PlayOneRound function)
		printf("Let's play a game %d\n", i);
		GetTheLetter();
		PlayOneRound(solution);

		//win or lose
		if (i == 1)
		{
			printf("You Guessed it! \n");
		}

		else
		{
			printf("You did not guess it. The correct letter is %c. \n", solution);
		}

	}

	//close file
	fclose(intpr);

	return 0;

}


//Function definitions
//copy and paste prototypes and comments from assignment. Then remove the ; from each

//this function runs one game. It for checks either 5 incorrect guesses or correct guess.
/*It returns a 0 if the game is over and the player did not guess the letter, otherwise it
returns 1.*/
int PlayOneRound(char solution)
{
	char GetTheLetter = 0;
	int numGuesses = 0;
	int winOrLose = 0;
	//SHOULD BE INITIALZED TO 0
	while (numGuesses < MAXGUESSES && winOrLose == 0)
	{
		//GetTheLetter function call
		//this function prompts the player to make a guess and returns that guess
		//this function is called from inside the PlayOneRound( ) function described above
		char GetTheLetter(void);
		{
			char temp;
			//ask for letter in file
			printf("Guess a Letter. \n");

			//get a letter from file
			scanf("%c", &temp);

			//returning letter
			return temp;

		}

		//CompareTheLetters function call
		//this function takes two arguments, the guess from the player 
		//and the solution letter from the file. 
		//It lets the user know if the guess comes alphabetically before or after the answer 
		//The function returns 1 if the guess matches the solution and returns a 0 if they do not match
		int CompareTheLetters(char guess, char solution);		{			char guess;			char solution;            //promt			printf("Enter a letter. \n", guess);			scanf("%c", &GetTheLetter);			if (guess == solution)			{
				printf("You guessed it!\n");
				return 1;
			}

			else if
			(
				else if (guess > solution)
				{
					printf("The letter comes before %c. \n");
				}

				else (guess < solution)
				{
					printf("The letter comes after %c.\n");
					GetTheLetter();
					return 0;
				}
			)
			//update counter for number of guesses used
			GetTheLetter();
			CompareTheLetters(guess, solution);
			numGuesses = numGuesses + 1;

			if (guess == solution)
			{
				printf("You guessed it! /n");
			}
			else if (numGuesses > MAXGUESSES)
			{
				printf("You did not guess the letter. \n");
				printf("The correct answer is %c. \n", solution);
				return 0;
			}
			{
				return 1;
			}
		}

		return 0;
	}